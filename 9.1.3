LUA = 'XIU Line Rangers'
GLabel = 'LINE Rangers'
GProcess = 'com.linecorp.LGRGS'
GVersion = '9.1.3'
xbit = 32 
LibResult = 1
xlib = 'libgame.so'
xREV = 1  I={}
xCNE = 0
xSSE = 1
XbitX = 1
printx = '---------------------------------------------------------------'
print(printx)
xTAGx = 'Script Made by XIU'
print(xTAGx)
xMOTOx = 'Join My Telegram For New Update '
print(xMOTOx)
xLINKx = 'https://t.me/xiuushan'
print(xLINKx)
print(GLabel..'  '..GVersion)
print(printx)
--███████████████████████
--███████████████████████
--███████████████████████
gg.require('101.1')
xiu=1
gg.setVisible(false)
v=gg.getTargetInfo()
    if v==nil then
        print("×× ERROR ××\n×× INVALID PROCESS SELECTED / OR NO ROOT ACCESS") 
        gg.setVisible(true) os.exit()
        return
    end 
------------------------------------------------------------------------------
gg.setRanges(gg.REGION_CODE_APP) 
------------------------------------------------------------------------------
OFF="× " ON="√ "

DM=OFF FR=OFF AD=OFF OH=OFF MD=OFF
IB=OFF AR=OFF TS=OFF


function menu()
xiu=0
gg.toast(xTAGx)  
mc=gg.multiChoice({
	DM.."Damage",
	FR.."Fast Release",
	AD.."Enemy Auto Death",
	OH.."One Hit Enemy Base",
	MD.."Missile No Damage",
	IB.."Indestructible Base",
	AR.."PvP Anti Report",
	TS.."Time Speed",	
	"[EXIT]"},
    {},xTAGx.."\n"..xLINKx)
	
	if mc==nil then cancel() return end
	if mc[1] then dm() end
	if mc[2] then fr() end
	if mc[3] then ad() end
	if mc[4] then oh() end
	if mc[5] then md() end
	if mc[6] then ib() end
	if mc[7] then ar() end
	if mc[8] then ts() end
	if mc[9] then exit() return end 

gg.toast("[√] Complete") 

end
--███████████████████████

function dm()
if DM==OFF then
    clear() wait() x=282579962709375 t=q search()
    o=0x6532BC offset() x=-5835620649745252352 t=q refine()
    x=-5835620648485349761 t=q edit()
    clear() DM=ON
    else
    clear() wait() x=282579962709375 t=q search()
    o=0x6532BC offset() x=-5835620648485349761 t=q refine()
    x=-5835620649745252352 t=q edit()
    clear() DM=OFF
end
end

--███████████████████████

function fr()
if FR==OFF then
    clear() wait() x=282579962709375 t=q search()
    o=0x3E56C4 offset() x=-5023502944650133504 t=q refine()
    x=-5023502941355784225 t=q edit()
    clear() FR=ON
    else
    clear() wait() x=282579962709375 t=q search()
    o=0x3E56C4 offset() x=-5023502941355784225 t=q refine()
    x=-5023502944650133504 t=q edit()
    clear() FR=OFF
end
end

--███████████████████████

function ad()
if AD==OFF then
    clear() wait() x=282579962709375 t=q search()
    o=0x4781A4 offset() x=-456280477397417984 t=q refine()
    x=-456280479432956940 t=q edit()
    clear() AD=ON
    else
    clear() wait() x=282579962709375 t=q search()
    o=0x4781A4 offset() x=-456280479432956940 t=q refine()
    x=-456280477397417984 t=q edit()
    clear() AD=OFF
end
end

--███████████████████████

function oh()
if OH==OFF then
    clear() wait() x=282579962709375 t=q search()
    o=0x3E4B88 offset() x=58596032660897792 t=q refine()
    x=58596033864880044 t=q edit()
    clear() OH=ON
    else
    clear() wait() x=282579962709375 t=q search()
    o=0x3E4B88 offset() x=58596033864880.044 t=q refine()
    x=58596032660897792 t=q edit()
    clear() OH=OFF
end
end

--███████████████████████

function md()
if MD==OFF then
    clear() wait() x=282579962709375 t=q search()
    o=0x43A720 offset() x=57090106576863232 t=q refine()
    x=57090108750645166 t=q edit()
    clear() MD=ON
    else
    clear() wait() x=282579962709375 t=q search()
    o=0x43A720 offset() x=57090108750645166 t=q refine()
    x=57090106576863232 t=q edit()
    clear() MD=OFF
end
end

--███████████████████████

function ib()
if IB==OFF then
    clear() wait() x=282579962709375 t=q search()
    o=0x42BE7C offset() x=5639992582929141582 t=q refine()
    x=5639992582738798445 t=q edit()
    clear() IB=ON
    else
    clear() wait() x=282579962709375 t=q search()
    o=0x42BE7C offset() x=5639992582738798445 t=q refine()
    x=5639992582929141582 t=q edit()
    clear() IB=OFF
end
end

--███████████████████████

function ar()
if AR==OFF then
    clear() wait() x=282579962709375 t=q search()
    o=0x1028854 offset() x=824633720992 t=q refine()
    x=824733720832 t=q edit()
    clear() AR=ON
    else
    clear() wait() x=282579962709375 t=q search()
    o=0x1028854 offset() x=824733720832 t=q refine()
    x=824633720992 t=q edit()
    clear() AR=OFF
end
end

--███████████████████████

function ts()
if TS==OFF then
    clear() wait() x=282579962709375 t=q search()
    o=0x9C3E1C offset() x=5292895045552135209 t=q refine()
    x=5292895045542907740 t=q edit()
    clear() TS=ON
    else
    clear() wait() x=282579962709375 t=q search()
    o=0x9C3E1C offset() x=5292895045542907740 t=q refine()
    x=5292895045552135209 t=q edit()
    clear() TS=OFF
end
end

--███████████████████████
    if v.processName~=GProcess then
        print("This Script is For:\n    "..GLabel.."\n    "..GProcess.."\nYou Selected:\n    "..v.label.."\n    "..v.processName)
        gg.setVisible (true) os.exit()
        return
    end 
------------------------------------------------------------------------------
    if v.x64 then bitx=64 xBITx="[x64]" else bitx=32 xBITx="[x32]" end 
------------------------------------------------------------------------------
    if XbitX==1 then 
        if bitx~=xbit then 
            print("This Script is For "..xbit.."bit Process\nYour Process is "..bitx.."bit")
            gg.setVisible(true) os.exit()
            return
        end 
    end 
------------------------------------------------------------------------------
    if GVersion~=v.versionName then
        print("This Script is for Game Version:\n    "..GVersion.."\nYour Game Version is:\n    "..v.versionName) 
        gg.setVisible(true) os.exit() 
        return
    end 
------------------------------------------------------------------------------
nLD=v.nativeLibraryDir 
    if not string.match(nLD,"/lib/arm") then 
        print("<< PC x86 >>")
        print("Script Not Written for x86 Libraries (PC)") 
        gg.setVisible(true) os.exit() 
        return 
    end 
--███████████████████████
    if LibResult==1 then 
        xLibRes=0 
        libx=gg.getRangesList()
            if #(libx)==0 then 
                print("×× LIB ERROR #01 ××\nNo Libs Found\nTry a Different Virtual Environment \nor Try a Better Game Installation Method\nor Download Game From 'apkcombo.com' ")
                gg.setVisible(true) 
                os.exit() 
            end
        libx=gg.getRangesList(xlib)
            if #(libx)==0 then  
                print("×× LIB ERROR #02 ××\nNo "..xlib.." Found\nTry a Different Virtual Environment \nor Try a Better Game Installation Method\nor Download Game From 'apkcombo.com' ")
                gg.setVisible(true) 
                os.exit() 
            end
            xlibn=0 
            for i, v in ipairs(libx) do
            xlibn=xlibn+1
                if libx[i].state=="Xa" then 
                    xXIUx=gg.getRangesList(xlib)[xlibn].start
                    xLibRes=1
                    break 
                end
            end 
            if xLibRes==0 then 
                print("×× LIB ERROR #03 ××\nNo "..xlib.." Found in Xa\nTry a Different Virtual Environment \nor Try a Better Game Installation Method\nor Download Game From 'apkcombo.com' ")
                gg.setVisible(true) 
                os.exit()     
            end                      
    end 
--███████████████████████
function arm()
o=tonumber(o) 
xdump=nil xdump={} 
xdump[1]={} xdump[2]={}
xdump[1].address=xXIUx + o
xdump[1].flags=4
    if x==0 then xdump[1].value=xfalse end
    if x==1 then xdump[1].value=xtrue end
    if x~=0 and x~=1 then xdump[1].value=x end 
xdump[2].address=xXIUx+(o+4)
xdump[2].flags=4
xdump[2].value=xEND 
gg.setValues(xdump) 
end 
------------------------------------------------------------------------------  
function revert()
REVERT=nil REVERT={} xRx=nil xRx=1 
    for i, v in ipairs(ORIG) do
        if tonumber(xXIUx+o)==ORIG[i].address then
            REVERT[xRx]={}
            REVERT[xRx].address=xXIUx+o
            REVERT[xRx].flags=4
            REVERT[xRx].value=ORIG[i].value
            xRx=xRx+1
            REVERT[xRx]={}
            REVERT[xRx].address=xXIUx+o+4
            REVERT[xRx].flags=4
            REVERT[xRx].value=ORIG[i+1].value
            gg.setValues(REVERT) 
            break
        end
    xRx=xRx+1
    end 
end 
--███████████████████████
if v.x64 then
xtrue="h200080D2" -- MOV X0, #0x1
xfalse="h000080D2" -- MOV X0, #0x0 
xEND="hC0035FD6" -- RET
else 
xtrue="h0100A0E3" -- MOVW R0, #1 
xfalse="h0000A0E3" -- MOVW R0, #0 
xEND="h1EFF2FE1" -- BX LR 
end 
------------------------------------------------------------------------------  
if xREV==1 then
xRx=1 ORIG={} xREV={} 
    for i, v in ipairs(I) do
        ORIG[xRx]={}
        ORIG[xRx].address=xXIUx+tonumber(I[i])
        ORIG[xRx].flags=4 
        xRx=xRx+1 
        ORIG[xRx]={}
        ORIG[xRx].address=xXIUx+tonumber(I[i])+4
        ORIG[xRx].flags=4 
        xRx=xRx+1
    end
ORIG=gg.getValues(ORIG) 
end 
--███████████████████████
-- Script Made by XIU
b=1 w=2 d=4 f=16 q=32 e=64 
------------------------------------------------------------------------------  
function clear()
gg.getResults(gg.getResultsCount())
gg.clearResults()
end
------------------------------------------------------------------------------  
function get()
gg.getResults(gg.getResultsCount())
end
------------------------------------------------------------------------------  
function search()
gg.getResults(gg.getResultsCount())
gg.clearResults()
gg.searchNumber(x,t) 
end
------------------------------------------------------------------------------  
function refine()
gg.refineNumber(x,t) 
end 
------------------------------------------------------------------------------  
function refinenot()
gg.refineNumber(x,t,false,gg.SIGN_NOT_EQUAL) 
end 
------------------------------------------------------------------------------  
function edit()
gg.getResults(gg.getResultsCount())
gg.editAll(x,t) 
end 
------------------------------------------------------------------------------  
function head() 
gg.toast("Please Wait") 
header=nil 
header=gg.getResults(1)
gg.getResults(gg.getResultsCount())
gg.clearResults()
gg.searchNumber(tostring(header[1].value),t)
end 
-----------------------------------------
function heads()
gg.toast("Please Wait..") 
gg.getResults(gg.getResultsCount())
gg.clearResults()
gg.searchNumber(tostring(header[1].value),t) 
gg.getResults(gg.getResultsCount())
end 
-----------------------------------------
function headg()
gg.getResults(gg.getResultsCount())
header = gg.getResults(1)
end 
-----------------------------------------
function heade()
gg.editAll(tostring(header[1].value),t) 
end 
------------------------------------------------------------------------------  
function check()
checkCnt=nil
checkCnt=gg.getResultsCount()
    if checkCnt==0 then E=0 else E=1 end
end 
------------------------------------------------------------------------------  
function offset()
o=tonumber(o) addoff=nil 
addoff=gg.getResults(gg.getResultsCount())
    for i, v in ipairs(addoff) do
        addoff[i].address=addoff[i].address+o
        addoff[i].flags=t
    end
gg.loadResults(addoff) 
end 
------------------------------------------------------------------------------  
function freeze()
frz=nil 
frz=gg.getResults(gg.getResultsCount())
    for i, v in ipairs(frz) do 
        frz[i].freeze = true
    end
gg.addListItems(frz) 
end 
--███████████████████████
function cancel()
gg.toast("CANCELLED")
end 
------------------------------------------------------------------------------  
function wait()
gg.toast("Please Wait..") 
end 
------------------------------------------------------------------------------  
function error()
gg.toast("× ERROR ×")
gg.sleep(1000)
end 
------------------------------------------------------------------------------  
function exit()
gg.getListItems()
gg.clearList()
gg.getResults(gg.getResultsCount())
gg.clearResults()
gg.toast("[ EXIT ]")  
    if xhaX~=nil then 
        print(printx) 
        print(xhaX) 
        print(printx)  
    end 
gg.setVisible(true) 
os.exit()
return
end 
--███████████████████████
while true do
    if gg.isVisible() then
        gg.setVisible(false) 
        menu() 
    else
        if xiu==1 then
            gg.setVisible(false) 
            menu()
        end 
    end 
end 
